[tool.poetry]
name = "nltu-schedule"
version = "0.1.0"
description = "NLTU Schedule API"
authors = [
    "Yurii Karabas <1998uriyyo@gmail.com>",
]

[tool.poetry.dependencies]
python = "^3.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "G",  # flake8-logging-format
    "DTZ", # flake8-datetimez
    "PIE", # flake8-pie
    "S",  # flake8-bandit
    "COM", # flake8-commas
    "PT", # flake8-pytest-style
    "Q",  # flake8-quotes
    "TID", # flake8-tidy-imports
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    "RUF", # ruff specific rules
]
ignore = [
    "S101",  # use of assert detected
    "B008",  # do not perform function calls in argument defaults
    "RUF001", # cyrilic letters
    "SIM108", # trenary operator
    "TRY003", # long msg in exc
    "COM812", # will be handled by ruff format
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10
